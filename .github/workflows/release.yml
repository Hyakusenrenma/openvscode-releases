name: Release the VS Code server bundles
on: [workflow_dispatch]

jobs:
  build:
    env:
      NODE_VERSION: v14.17.5
    strategy:
      matrix:
        os: [ubuntu-18.04, macos-11, windows-latest]
    runs-on: ${{ matrix.os }}
    name: Build on ${{ matrix.os }}
    steps:
      - name: Check out the vscode repository
        run: git clone https://github.com/gitpod-io/vscode --depth=1 --branch web-server
      - uses: actions/setup-node@v2
        with:
          node-version: "14"
      - name: Set cache key (Linux & macOS)
        if: runner.os != 'Windows'
        working-directory: vscode/
        run: |
          echo "CACHE_KEY=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      - name: Set environment variables (Windows)
        if: runner.os == 'Windows'
        working-directory: vscode/
        run: |
          chcp 65001
          echo ("CACHE_KEY=$(git rev-parse --short HEAD)") >> $env:GITHUB_ENV
      - uses: actions/cache@v2
        id: cache
        with:
          path: |
            server-pkg/
            vscode/
            server-pkg-server/
            server-pkg-web/
          key: ${{ runner.os }}-${{ env.CACHE_KEY }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        working-directory: ./vscode
        run: yarn --frozen-lockfile --network-timeout 180000
      - name: Prepare for distribution
        if: steps.cache.outputs.cache-hit != 'true'
        working-directory: ./vscode
        run: yarn gulp server-min
      - if: runner.os == 'Windows'
        name: Download Node.js (Windows)
        run: |
          curl -o node.zip https://nodejs.org/dist/${{ env.NODE_VERSION }}/node-${{ env.NODE_VERSION }}-win-x64.zip
          Expand-Archive -LiteralPath node.zip -DestinationPath bundle/node
          mv bundle/node/node-*/* bundle/node/
          rm bundle/node-*/
      - if: runner.os == 'Linux'
        name: Download Node.js (Linux)
        run: |
          curl -o node.tar.xz https://nodejs.org/dist/${{ env.NODE_VERSION }}/node-${{ env.NODE_VERSION }}-linux-x64.tar.xz
          mkdir -p bundle/node
          tar -xvf node.tar.xz --directory=bundle/node
          mv bundle/node/node-*/* bundle/node/
          rm -rf bundle/node-*/
      - if: runner.os == 'macOS'
        name: Download Node.js (macOS)
        run: |
          curl -o node.tar.xz https://nodejs.org/dist/${{ env.NODE_VERSION }}/node-${{ env.NODE_VERSION }}-darwin-x64.tar.gz
          mkdir -p bundle/node
          tar -xvf node.tar.xz --directory=bundle/node
          mv bundle/node/node-*/* bundle/node/
          rm -rf bundle/node-*/
      - name: Move build output
        run: cp -r server-pkg/ bundle/
      - name: Determine archive filename
        uses: haya14busa/action-cond@v1
        id: archive
        with:
          cond: ${{ runner.os == 'Windows' }}
          if_true: "zip"
          if_false: "tar.gz"
      - name: Set environment variables (Linux & macOS)
        if: runner.os != 'Windows'
        run: |
          echo "EXTENSION=${{ steps.archive.outputs.value }}" >> $GITHUB_ENV
          echo "VERSION=$(node -p -e "require('./vscode/package.json').version")" >> $GITHUB_ENV
      - name: Set environment variables (Windows)
        if: runner.os == 'Windows'
        run: |
          chcp 65001
          echo ("ARCHIVE_NAME=code-web-server-v" + $(node -p -e "require('./vscode/package.json').version")+"-${{ runner.os }}-x64") >> $env:GITHUB_ENV
          echo ("ARCHIVE_FULL_NAME=code-web-server-v" + $(node -p -e "require('./vscode/package.json').version")+"-${{ runner.os }}-x64.${{ steps.archive.outputs.value }}") >> $env:GITHUB_ENV
      - name: Set archive file name
        run: |
          echo "ARCHIVE_NAME=code-web-server-v${{ env.VERSION }}-${{ runner.os }}-x64" >> $GITHUB_ENV
          echo "ARCHIVE_FULL_NAME=code-web-server-v${{ env.VERSION }}-${{ runner.os }}-x64.${{ env.EXTENSION }}" >> $GITHUB_ENV
      - if: runner.os != 'Windows'
        name: Create startup script (Linux & macOS)
        run: |
          curl -o bundle/startup.sh https://raw.githubusercontent.com/gitpod-io/vscode-releases/main/scripts/startup.sh
          chmod u+x bundle/startup.sh
          sudo chmod -R ugo-wrx ./bundle/node/bin/
          chmod +rwx ./bundle/node/bin/node
      - if: ${{ runner.os == 'Windows' }}
        name: Create startup script (Windows)
        run: curl -o bundle/startup.cmd https://raw.githubusercontent.com/gitpod-io/vscode-releases/main/scripts/startup.cmd
      - name: Rename the bundle file
        run: mv bundle/ ${{ env.ARCHIVE_NAME }}/
      - name: Bundle tarfile
        if: runner.os  != 'Windows'
        run: |
          sudo tar cfzv ${{ env.ARCHIVE_FULL_NAME }} ${{ env.ARCHIVE_NAME }}/ > /dev/null
      - name: Bundle zip
        if: runner.os == 'Windows'
        run: |
          Compress-Archive -Path ${{ env.ARCHIVE_NAME }}\* -CompressionLevel Optimal -DestinationPath ${{ env.ARCHIVE_FULL_NAME }}
      - name: Archive sanity check
        uses: actions/upload-artifact@v2
        with:
          name: ${{ runner.os }}-x64
          path: ${{ env.ARCHIVE_FULL_NAME }}
  arch-build:
    runs-on: ubuntu-latest
    name: Build on Linux (${{ matrix.arch }})
    strategy:
      matrix:
        arch: [aarch64, armv7]
    steps:
      - uses: actions/checkout@v2.1.0
      - uses: uraimo/run-on-arch-action@v2.0.5
        name: Run commands
        id: runcmd
        with:
          arch: ${{ matrix.arch }}
          distro: ubuntu18.04
          dockerRunArgs: |
            --volume "${PWD}/artifacts:/artifacts"
          run: |
            git clone https://github.com/gitpod-io/vscode --depth=1 --branch web-server
            cd vscode
            yarn
            yarn gulp server-min
            ls -R
  upload:
    needs: [build, arch-build]
    runs-on: ubuntu-latest
    name: Create the release
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          path: outputs/
      - run: ls -R
      - run: echo "TAG=$(ls outputs/Linux-x64 | sed -nre 's/^[^0-9]*(([0-9]+\.)*[0-9]+).*/\1/p')" >> $GITHUB_ENV
      # - name: Create release
      #   uses: ncipollo/release-action@v1
      #   with:
      #     artifacts: 'outputs/**/*.tar.gz,outputs/**/*.zip'
      #     body: 'A new release of Visual Studio Code server is out, you can find the downloads for the different platforms below.'
      #     tag: v${{ env.TAG }}
      #     # repo: vscode
      #     token: ${{ secrets.GITHUB_TOKEN }} # Todo: add a token with more permissions
